

//! TLE

class Solution {
    static ArrayList<Integer> max_of_subarrays(int arr[], int n, int k) {
        // Your code here
        ArrayList<Integer>  al = new ArrayList<>();
        for(int i = 0;i<=n-k;i++){
            int num = 0;
            for(int j=i;j<i+k;j++){
                if(arr[j]>num){
                    num = arr[j];
                }
            }
            al.add(num);
        }
        return al;
    }
}

//! TLE


class SolutionPQ {
    static ArrayList<Integer> max_of_subarrays(int arr[], int n, int k) {
        // Your code here
        ArrayList<Integer> al = new ArrayList<Integer>();
        
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        
        for(int i = 0;i<k;i++){
            pq.add(arr[i]);
        }
        al.add(pq.peek());
        for(int i = 0;i<n-k;i++){ //N
            pq.remove(arr[i]); // logk
            pq.add(arr[i+k]);  // klogk
            al.add(pq.peek());
        }
        return al;
    }
}